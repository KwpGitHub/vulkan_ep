#include <map>
#include "layers.h"
namespace backend {template<typename T> Layer* createInstance(std::string n, std::vector<std::string> i, std::vector<std::string> o, std::map<std::string, std::vector<std::string>> a) { return new T(n, i, o, a); }

std::map<std::string, Layer*(*)(std::string n, std::vector<std::string> i, std::vector<std::string> o, std::map<std::string, std::vector<std::string>> a)> layer_map = {
	{ "LSTM", &createInstance<LSTM>},
	{ "Identity", &createInstance<Identity>},
	{ "Abs", &createInstance<Abs>},
	{ "BatchNormalization", &createInstance<BatchNormalization>},
	{ "Mean", &createInstance<Mean>},
	{ "Add", &createInstance<Add>},
	{ "GlobalMaxPool", &createInstance<GlobalMaxPool>},
	{ "Cast", &createInstance<Cast>},
	{ "And", &createInstance<And>},
	{ "LRN", &createInstance<LRN>},
	{ "ArgMax", &createInstance<ArgMax>},
	{ "Expand", &createInstance<Expand>},
	{ "Neg", &createInstance<Neg>},
	{ "Mul", &createInstance<Mul>},
	{ "ArgMin", &createInstance<ArgMin>},
	{ "CastMap", &createInstance<CastMap>},
	{ "Exp", &createInstance<Exp>},
	{ "Div", &createInstance<Div>},
	{ "Ceil", &createInstance<Ceil>},
	{ "DepthToSpace", &createInstance<DepthToSpace>},
	{ "Clip", &createInstance<Clip>},
	{ "RNN", &createInstance<RNN>},
	{ "Concat", &createInstance<Concat>},
	{ "Constant", &createInstance<Constant>},
	{ "LpPool", &createInstance<LpPool>},
	{ "Conv", &createInstance<Conv>},
	{ "Not", &createInstance<Not>},
	{ "Gather", &createInstance<Gather>},
	{ "ConvTranspose", &createInstance<ConvTranspose>},
	{ "LeakyRelu", &createInstance<LeakyRelu>},
	{ "Elu", &createInstance<Elu>},
	{ "GlobalAveragePool", &createInstance<GlobalAveragePool>},
	{ "Gemm", &createInstance<Gemm>},
	{ "Equal", &createInstance<Equal>},
	{ "Tile", &createInstance<Tile>},
	{ "Flatten", &createInstance<Flatten>},
	{ "Floor", &createInstance<Floor>},
	{ "GRU", &createInstance<GRU>},
	{ "GlobalLpPool", &createInstance<GlobalLpPool>},
	{ "Greater", &createInstance<Greater>},
	{ "HardSigmoid", &createInstance<HardSigmoid>},
	{ "Selu", &createInstance<Selu>},
	{ "Hardmax", &createInstance<Hardmax>},
	{ "If", &createInstance<If>},
	{ "Min", &createInstance<Min>},
	{ "InstanceNormalization", &createInstance<InstanceNormalization>},
	{ "Less", &createInstance<Less>},
	{ "EyeLike", &createInstance<EyeLike>},
	{ "RandomNormal", &createInstance<RandomNormal>},
	{ "PRelu", &createInstance<PRelu>},
	{ "Log", &createInstance<Log>},
	{ "LogSoftmax", &createInstance<LogSoftmax>},
	{ "Loop", &createInstance<Loop>},
	{ "LpNormalization", &createInstance<LpNormalization>},
	{ "MatMul", &createInstance<MatMul>},
	{ "ReduceL2", &createInstance<ReduceL2>},
	{ "Max", &createInstance<Max>},
	{ "MaxRoiPool", &createInstance<MaxRoiPool>},
	{ "Or", &createInstance<Or>},
	{ "Pad", &createInstance<Pad>},
	{ "RandomUniformLike", &createInstance<RandomUniformLike>},
	{ "Reciprocal", &createInstance<Reciprocal>},
	{ "Pow", &createInstance<Pow>},
	{ "RandomNormalLike", &createInstance<RandomNormalLike>},
	{ "OneHot", &createInstance<OneHot>},
	{ "RandomUniform", &createInstance<RandomUniform>},
	{ "ReduceL1", &createInstance<ReduceL1>},
	{ "ReduceLogSum", &createInstance<ReduceLogSum>},
	{ "ReduceLogSumExp", &createInstance<ReduceLogSumExp>},
	{ "ReduceMax", &createInstance<ReduceMax>},
	{ "OneHotEncoder", &createInstance<OneHotEncoder>},
	{ "IsNaN", &createInstance<IsNaN>},
	{ "ReduceMean", &createInstance<ReduceMean>},
	{ "ReduceMin", &createInstance<ReduceMin>},
	{ "TreeEnsembleRegressor", &createInstance<TreeEnsembleRegressor>},
	{ "ReduceProd", &createInstance<ReduceProd>},
	{ "ReduceSum", &createInstance<ReduceSum>},
	{ "ReduceSumSquare", &createInstance<ReduceSumSquare>},
	{ "Relu", &createInstance<Relu>},
	{ "Reshape", &createInstance<Reshape>},
	{ "Shape", &createInstance<Shape>},
	{ "Sigmoid", &createInstance<Sigmoid>},
	{ "Size", &createInstance<Size>},
	{ "Softmax", &createInstance<Softmax>},
	{ "Softplus", &createInstance<Softplus>},
	{ "Softsign", &createInstance<Softsign>},
	{ "SpaceToDepth", &createInstance<SpaceToDepth>},
	{ "TfIdfVectorizer", &createInstance<TfIdfVectorizer>},
	{ "Split", &createInstance<Split>},
	{ "Imputer", &createInstance<Imputer>},
	{ "Sqrt", &createInstance<Sqrt>},
	{ "Squeeze", &createInstance<Squeeze>},
	{ "Sub", &createInstance<Sub>},
	{ "Sum", &createInstance<Sum>},
	{ "Shrink", &createInstance<Shrink>},
	{ "Tanh", &createInstance<Tanh>},
	{ "Transpose", &createInstance<Transpose>},
	{ "Unsqueeze", &createInstance<Unsqueeze>},
	{ "SVMClassifier", &createInstance<SVMClassifier>},
	{ "Xor", &createInstance<Xor>},
	{ "Acos", &createInstance<Acos>},
	{ "Asin", &createInstance<Asin>},
	{ "Atan", &createInstance<Atan>},
	{ "Cos", &createInstance<Cos>},
	{ "Sin", &createInstance<Sin>},
	{ "Tan", &createInstance<Tan>},
	{ "Multinomial", &createInstance<Multinomial>},
	{ "Scan", &createInstance<Scan>},
	{ "Compress", &createInstance<Compress>},
	{ "ConstantOfShape", &createInstance<ConstantOfShape>},
	{ "MaxUnpool", &createInstance<MaxUnpool>},
	{ "Scatter", &createInstance<Scatter>},
	{ "Sinh", &createInstance<Sinh>},
	{ "Cosh", &createInstance<Cosh>},
	{ "Asinh", &createInstance<Asinh>},
	{ "Acosh", &createInstance<Acosh>},
	{ "Atanh", &createInstance<Atanh>},
	{ "Sign", &createInstance<Sign>},
	{ "Erf", &createInstance<Erf>},
	{ "Where", &createInstance<Where>},
	{ "NonZero", &createInstance<NonZero>},
	{ "MeanVarianceNormalization", &createInstance<MeanVarianceNormalization>},
	{ "ArrayFeatureExtractor", &createInstance<ArrayFeatureExtractor>},
	{ "Binarizer", &createInstance<Binarizer>},
	{ "CategoryMapper", &createInstance<CategoryMapper>},
	{ "DictVectorizer", &createInstance<DictVectorizer>},
	{ "FeatureVectorizer", &createInstance<FeatureVectorizer>},
	{ "LabelEncoder", &createInstance<LabelEncoder>},
	{ "LinearClassifier", &createInstance<LinearClassifier>},
	{ "LinearRegressor", &createInstance<LinearRegressor>},
	{ "Normalizer", &createInstance<Normalizer>},
	{ "SVMRegressor", &createInstance<SVMRegressor>},
	{ "Scaler", &createInstance<Scaler>},
	{ "TreeEnsembleClassifier", &createInstance<TreeEnsembleClassifier>},
	{ "ZipMap", &createInstance<ZipMap>}
};
}
    