#include <map>
#include "layers.h"
namespace backend {

    template<typename T> Layer* createInstance(std::string n, std::vector<std::string> i, std::vector<std::string> o, std::map<std::string, std::vector<std::string>> a) { return new T(n, i, o, a); }

std::map<std::string, Layer*(*)(std::string n, std::vector<std::string> i, std::vector<std::string> o, std::map<std::string, std::vector<std::string>> a)> layer_map = {
	{ "LSTM", &createInstance<LSTM>}, 
	{ "Identity", &createInstance<Identity>}, 
	{ "Abs", &createInstance<Abs>}, 
	{ "BatchNormalization", &createInstance<BatchNormalization>}, 
	{ "Mean", &createInstance<Mean>}, 
	{ "Add", &createInstance<Add>}, 
	{ "GlobalMaxPool", &createInstance<GlobalMaxPool>}, 
	{ "Cast", &createInstance<Cast>}, 
	{ "AveragePool", &createInstance<AveragePool>}, 
	{ "And", &createInstance<And>}, 
	{ "LRN", &createInstance<LRN>}, 
	{ "ArgMax", &createInstance<ArgMax>}, 
	{ "Resize", &createInstance<Resize>}, 
	{ "Expand", &createInstance<Expand>}, 
	{ "Neg", &createInstance<Neg>}, 
	{ "Mul", &createInstance<Mul>}, 
	{ "ArgMin", &createInstance<ArgMin>}, 
	{ "CastMap", &createInstance<CastMap>}, 
	{ "Exp", &createInstance<Exp>}, 
	{ "Div", &createInstance<Div>}, 
	{ "ReverseSequence", &createInstance<ReverseSequence>}, 
	{ "Ceil", &createInstance<Ceil>}, 
	{ "DepthToSpace", &createInstance<DepthToSpace>}, 
	{ "Clip", &createInstance<Clip>}, 
	{ "RNN", &createInstance<RNN>}, 
	{ "Concat", &createInstance<Concat>}, 
	{ "Constant", &createInstance<Constant>}, 
	{ "LpPool", &createInstance<LpPool>}, 
	{ "Conv", &createInstance<Conv>}, 
	{ "Not", &createInstance<Not>}, 
	{ "Gather", &createInstance<Gather>}, 
	{ "ConvTranspose", &createInstance<ConvTranspose>}, 
	{ "Dropout", &createInstance<Dropout>}, 
	{ "LeakyRelu", &createInstance<LeakyRelu>}, 
	{ "Elu", &createInstance<Elu>}, 
	{ "GlobalAveragePool", &createInstance<GlobalAveragePool>}, 
	{ "Gemm", &createInstance<Gemm>}, 
	{ "MaxPool", &createInstance<MaxPool>}, 
	{ "Equal", &createInstance<Equal>}, 
	{ "Tile", &createInstance<Tile>}, 
	{ "Flatten", &createInstance<Flatten>}, 
	{ "Floor", &createInstance<Floor>}, 
	{ "GRU", &createInstance<GRU>}, 
	{ "GlobalLpPool", &createInstance<GlobalLpPool>}, 
	{ "Greater", &createInstance<Greater>}, 
	{ "HardSigmoid", &createInstance<HardSigmoid>}, 
	{ "Selu", &createInstance<Selu>}, 
	{ "Hardmax", &createInstance<Hardmax>}, 
	{ "If", &createInstance<If>}, 
	{ "Min", &createInstance<Min>}, 
	{ "InstanceNormalization", &createInstance<InstanceNormalization>}, 
	{ "Less", &createInstance<Less>}, 
	{ "EyeLike", &createInstance<EyeLike>}, 
	{ "RandomNormal", &createInstance<RandomNormal>}, 
	{ "Slice", &createInstance<Slice>}, 
	{ "PRelu", &createInstance<PRelu>}, 
	{ "Log", &createInstance<Log>}, 
	{ "LogSoftmax", &createInstance<LogSoftmax>}, 
	{ "Loop", &createInstance<Loop>}, 
	{ "LpNormalization", &createInstance<LpNormalization>}, 
	{ "MatMul", &createInstance<MatMul>}, 
	{ "ReduceL2", &createInstance<ReduceL2>}, 
	{ "Max", &createInstance<Max>}, 
	{ "MaxRoiPool", &createInstance<MaxRoiPool>}, 
	{ "Or", &createInstance<Or>}, 
	{ "Pad", &createInstance<Pad>}, 
	{ "RandomUniformLike", &createInstance<RandomUniformLike>}, 
	{ "Reciprocal", &createInstance<Reciprocal>}, 
	{ "Pow", &createInstance<Pow>}, 
	{ "RandomNormalLike", &createInstance<RandomNormalLike>}, 
	{ "OneHot", &createInstance<OneHot>}, 
	{ "RandomUniform", &createInstance<RandomUniform>}, 
	{ "ReduceL1", &createInstance<ReduceL1>}, 
	{ "ReduceLogSum", &createInstance<ReduceLogSum>}, 
	{ "ReduceLogSumExp", &createInstance<ReduceLogSumExp>}, 
	{ "ReduceMax", &createInstance<ReduceMax>}, 
	{ "OneHotEncoder", &createInstance<OneHotEncoder>}, 
	{ "IsNaN", &createInstance<IsNaN>}, 
	{ "ReduceMean", &createInstance<ReduceMean>}, 
	{ "ReduceMin", &createInstance<ReduceMin>}, 
	{ "TreeEnsembleRegressor", &createInstance<TreeEnsembleRegressor>}, 
	{ "ReduceProd", &createInstance<ReduceProd>}, 
	{ "ReduceSum", &createInstance<ReduceSum>}, 
	{ "ReduceSumSquare", &createInstance<ReduceSumSquare>}, 
	{ "Relu", &createInstance<Relu>}, 
	{ "Reshape", &createInstance<Reshape>}, 
	{ "Shape", &createInstance<Shape>}, 
	{ "Sigmoid", &createInstance<Sigmoid>}, 
	{ "Size", &createInstance<Size>}, 
	{ "Softmax", &createInstance<Softmax>}, 
	{ "Softplus", &createInstance<Softplus>}, 
	{ "Softsign", &createInstance<Softsign>}, 
	{ "SpaceToDepth", &createInstance<SpaceToDepth>}, 
	{ "TfIdfVectorizer", &createInstance<TfIdfVectorizer>}, 
	{ "Split", &createInstance<Split>}, 
	{ "Imputer", &createInstance<Imputer>}, 
	{ "Sqrt", &createInstance<Sqrt>}, 
	{ "Squeeze", &createInstance<Squeeze>}, 
	{ "TopK", &createInstance<TopK>}, 
	{ "Sub", &createInstance<Sub>}, 
	{ "Sum", &createInstance<Sum>}, 
	{ "Shrink", &createInstance<Shrink>}, 
	{ "Tanh", &createInstance<Tanh>}, 
	{ "Transpose", &createInstance<Transpose>}, 
	{ "Unsqueeze", &createInstance<Unsqueeze>}, 
	{ "SVMClassifier", &createInstance<SVMClassifier>}, 
	{ "Xor", &createInstance<Xor>}, 
	{ "Acos", &createInstance<Acos>}, 
	{ "Asin", &createInstance<Asin>}, 
	{ "Atan", &createInstance<Atan>}, 
	{ "Cos", &createInstance<Cos>}, 
	{ "Sin", &createInstance<Sin>}, 
	{ "Tan", &createInstance<Tan>}, 
	{ "Multinomial", &createInstance<Multinomial>}, 
	{ "Scan", &createInstance<Scan>}, 
	{ "Compress", &createInstance<Compress>}, 
	{ "ConstantOfShape", &createInstance<ConstantOfShape>}, 
	{ "MaxUnpool", &createInstance<MaxUnpool>}, 
	{ "Scatter", &createInstance<Scatter>}, 
	{ "Sinh", &createInstance<Sinh>}, 
	{ "Cosh", &createInstance<Cosh>}, 
	{ "Asinh", &createInstance<Asinh>}, 
	{ "Acosh", &createInstance<Acosh>}, 
	{ "NonMaxSuppression", &createInstance<NonMaxSuppression>}, 
	{ "Atanh", &createInstance<Atanh>}, 
	{ "Sign", &createInstance<Sign>}, 
	{ "Erf", &createInstance<Erf>}, 
	{ "Where", &createInstance<Where>}, 
	{ "NonZero", &createInstance<NonZero>}, 
	{ "MeanVarianceNormalization", &createInstance<MeanVarianceNormalization>}, 
	{ "StringNormalizer", &createInstance<StringNormalizer>}, 
	{ "Mod", &createInstance<Mod>}, 
	{ "ThresholdedRelu", &createInstance<ThresholdedRelu>}, 
	{ "MatMulInteger", &createInstance<MatMulInteger>}, 
	{ "QLinearMatMul", &createInstance<QLinearMatMul>}, 
	{ "ConvInteger", &createInstance<ConvInteger>}, 
	{ "QLinearConv", &createInstance<QLinearConv>}, 
	{ "QuantizeLinear", &createInstance<QuantizeLinear>}, 
	{ "DequantizeLinear", &createInstance<DequantizeLinear>}, 
	{ "IsInf", &createInstance<IsInf>}, 
	{ "RoiAlign", &createInstance<RoiAlign>}, 
	{ "ArrayFeatureExtractor", &createInstance<ArrayFeatureExtractor>}, 
	{ "Binarizer", &createInstance<Binarizer>}, 
	{ "CategoryMapper", &createInstance<CategoryMapper>}, 
	{ "DictVectorizer", &createInstance<DictVectorizer>}, 
	{ "FeatureVectorizer", &createInstance<FeatureVectorizer>}, 
	{ "LabelEncoder", &createInstance<LabelEncoder>}, 
	{ "LinearClassifier", &createInstance<LinearClassifier>}, 
	{ "LinearRegressor", &createInstance<LinearRegressor>}, 
	{ "Normalizer", &createInstance<Normalizer>}, 
	{ "SVMRegressor", &createInstance<SVMRegressor>}, 
	{ "Scaler", &createInstance<Scaler>}, 
	{ "TreeEnsembleClassifier", &createInstance<TreeEnsembleClassifier>}, 
	{ "ZipMap", &createInstance<ZipMap>}
};


std::map<std::string, std::map<std::string, std::string> > parameter_map = {
{ "LSTM", {{"X", {"inputs", "Tensor*"} }, {"W", {"inputs", "Tensor*"} }, {"R", {"inputs", "Tensor*"} }, {"B", {"optional_input", "Tensor*"} }, {"sequence_lens", {"optional_input", "Tensor*"} }, {"initial_h", {"optional_input", "Tensor*"} }, {"initial_c", {"optional_input", "Tensor*"} }, {"P", {"optional_input", "Tensor*"} }, {"Y", {"optional_output", "Tensor*"} }, {"Y_h", {"optional_output", "Tensor*"} }, {"Y_c", {"optional_output", "Tensor*"} }, {"activation_alpha", {"optional_parameters", "Tensor*"} }, {"activation_beta", {"optional_parameters", "Tensor*"} }, {"activations", {"optional_parameters", "Tensor*"} }, {"clip", {"optional_parameters", "float"} }, {"direction", {"optional_parameters", "int"} }, {"hidden_size", {"optional_parameters", "int"} }, {"input_forget", {"optional_parameters", "int"} }} }, 
{ "Identity", {{"input", {"inputs", "Tensor*"} }, {"output", {"outputs", "Tensor*"} }} }, 
{ "Abs", {{"X", {"inputs", "Tensor*"} }, {"Y", {"outputs", "Tensor*"} }} }, 
{ "BatchNormalization", {{"X", {"inputs", "Tensor*"} }, {"scale", {"inputs", "Tensor*"} }, {"B", {"inputs", "Tensor*"} }, {"mean", {"inputs", "Tensor*"} }, {"var", {"inputs", "Tensor*"} }, {"Y", {"outputs", "Tensor*"} }, {"mean", {"optional_output", "Tensor*"} }, {"var", {"optional_output", "Tensor*"} }, {"saved_mean", {"optional_output", "Tensor*"} }, {"saved_var", {"optional_output", "Tensor*"} }, {"epsilon", {"optional_parameters", "float"} }, {"momentum", {"optional_parameters", "float"} }} }, 
{ "Mean", {{"mean", {"outputs", "Tensor*"} }} }, 
{ "Add", {{"A", {"inputs", "Tensor*"} }, {"B", {"inputs", "Tensor*"} }, {"C", {"outputs", "Tensor*"} }} }, 
{ "GlobalMaxPool", {{"X", {"inputs", "Tensor*"} }, {"Y", {"outputs", "Tensor*"} }} }, 
{ "Cast", {{"input", {"inputs", "Tensor*"} }, {"output", {"outputs", "Tensor*"} }, {"to", {"parameters", "int"} }} }, 
{ "AveragePool", {{"X", {"inputs", "Tensor*"} }, {"Y", {"outputs", "Tensor*"} }, {"kernel_shape", {"parameters", "Shape_t"} }, {"auto_pad", {"optional_parameters", "int"} }, {"ceil_mode", {"optional_parameters", "int"} }, {"count_include_pad", {"optional_parameters", "int"} }, {"pads", {"optional_parameters", "Shape_t"} }, {"strides", {"optional_parameters", "Shape_t"} }} }, 
{ "And", {{"A", {"inputs", "Tensor*"} }, {"B", {"inputs", "Tensor*"} }, {"C", {"outputs", "Tensor*"} }} }, 
{ "LRN", {{"X", {"inputs", "Tensor*"} }, {"Y", {"outputs", "Tensor*"} }, {"size", {"parameters", "int"} }, {"alpha", {"optional_parameters", "float"} }, {"beta", {"optional_parameters", "float"} }, {"bias", {"optional_parameters", "float"} }} }, 
{ "ArgMax", {{"data", {"inputs", "Tensor*"} }, {"reduced", {"outputs", "Tensor*"} }, {"axis", {"optional_parameters", "int"} }, {"keepdims", {"optional_parameters", "int"} }} }, 
{ "Resize", {{"X", {"inputs", "Tensor*"} }, {"scales", {"inputs", "Tensor*"} }, {"Y", {"outputs", "Tensor*"} }, {"mode", {"optional_parameters", "int"} }} }, 
{ "Expand", {{"input", {"inputs", "Tensor*"} }, {"shape", {"inputs", "Tensor*"} }, {"output", {"outputs", "Tensor*"} }} }, 
{ "Neg", {{"X", {"inputs", "Tensor*"} }, {"Y", {"outputs", "Tensor*"} }} }, 
{ "Mul", {{"A", {"inputs", "Tensor*"} }, {"B", {"inputs", "Tensor*"} }, {"C", {"outputs", "Tensor*"} }} }, 
{ "ArgMin", {{"data", {"inputs", "Tensor*"} }, {"reduced", {"outputs", "Tensor*"} }, {"axis", {"optional_parameters", "int"} }, {"keepdims", {"optional_parameters", "int"} }} }, 
{ "CastMap", {{"X", {"inputs", "Tensor*"} }, {"Y", {"outputs", "Tensor*"} }, {"cast_to", {"optional_parameters", "int"} }, {"map_form", {"optional_parameters", "int"} }, {"max_map", {"optional_parameters", "int"} }} }, 
{ "Exp", {{"input", {"inputs", "Tensor*"} }, {"output", {"outputs", "Tensor*"} }} }, 
{ "Div", {{"A", {"inputs", "Tensor*"} }, {"B", {"inputs", "Tensor*"} }, {"C", {"outputs", "Tensor*"} }} }, 
{ "ReverseSequence", {{"input", {"inputs", "Tensor*"} }, {"sequence_lens", {"inputs", "Tensor*"} }, {"Y", {"outputs", "Tensor*"} }, {"batch_axis", {"optional_parameters", "int"} }, {"time_axis", {"optional_parameters", "int"} }} }, 
{ "Ceil", {{"X", {"inputs", "Tensor*"} }, {"Y", {"outputs", "Tensor*"} }} }, 
{ "DepthToSpace", {{"input", {"inputs", "Tensor*"} }, {"output", {"outputs", "Tensor*"} }, {"blocksize", {"parameters", "int"} }} }, 
{ "Clip", {{"input", {"inputs", "Tensor*"} }, {"output", {"outputs", "Tensor*"} }, {"max", {"optional_parameters", "float"} }, {"min", {"optional_parameters", "float"} }} }, 
{ "RNN", {{"X", {"inputs", "Tensor*"} }, {"W", {"inputs", "Tensor*"} }, {"R", {"inputs", "Tensor*"} }, {"B", {"optional_input", "Tensor*"} }, {"sequence_lens", {"optional_input", "Tensor*"} }, {"initial_h", {"optional_input", "Tensor*"} }, {"Y", {"optional_output", "Tensor*"} }, {"Y_h", {"optional_output", "Tensor*"} }, {"activation_alpha", {"optional_parameters", "Tensor*"} }, {"activation_beta", {"optional_parameters", "Tensor*"} }, {"activations", {"optional_parameters", "Tensor*"} }, {"clip", {"optional_parameters", "float"} }, {"direction", {"optional_parameters", "int"} }, {"hidden_size", {"optional_parameters", "int"} }} }, 
{ "Concat", {{"concat_result", {"outputs", "Tensor*"} }, {"axis", {"parameters", "int"} }} }, 
{ "Constant", {{"output", {"outputs", "Tensor*"} }, {"value", {"parameters", "Tensor*"} }} }, 
{ "LpPool", {{"X", {"inputs", "Tensor*"} }, {"Y", {"outputs", "Tensor*"} }, {"kernel_shape", {"parameters", "Shape_t"} }, {"auto_pad", {"optional_parameters", "int"} }, {"p", {"optional_parameters", "int"} }, {"pads", {"optional_parameters", "Shape_t"} }, {"strides", {"optional_parameters", "Shape_t"} }} }, 
{ "Conv", {{"X", {"inputs", "Tensor*"} }, {"W", {"inputs", "Tensor*"} }, {"B", {"optional_input", "Tensor*"} }, {"Y", {"outputs", "Tensor*"} }, {"auto_pad", {"optional_parameters", "int"} }, {"dilations", {"optional_parameters", "Shape_t"} }, {"group", {"optional_parameters", "int"} }, {"kernel_shape", {"optional_parameters", "Shape_t"} }, {"pads", {"optional_parameters", "Shape_t"} }, {"strides", {"optional_parameters", "Shape_t"} }} }, 
{ "Not", {{"X", {"inputs", "Tensor*"} }, {"Y", {"outputs", "Tensor*"} }} }, 
{ "Gather", {{"data", {"inputs", "Tensor*"} }, {"indices", {"inputs", "Tensor*"} }, {"output", {"outputs", "Tensor*"} }, {"axis", {"optional_parameters", "int"} }} }, 
{ "ConvTranspose", {{"X", {"inputs", "Tensor*"} }, {"W", {"inputs", "Tensor*"} }, {"B", {"optional_input", "Tensor*"} }, {"Y", {"outputs", "Tensor*"} }, {"auto_pad", {"optional_parameters", "int"} }, {"dilations", {"optional_parameters", "Shape_t"} }, {"group", {"optional_parameters", "int"} }, {"kernel_shape", {"optional_parameters", "Shape_t"} }, {"output_padding", {"optional_parameters", "Shape_t"} }, {"output_shape", {"optional_parameters", "Shape_t"} }, {"pads", {"optional_parameters", "Shape_t"} }, {"strides", {"optional_parameters", "Shape_t"} }} }, 
{ "Dropout", {{"data", {"inputs", "Tensor*"} }, {"output", {"outputs", "Tensor*"} }, {"mask", {"optional_output", "Tensor*"} }, {"ratio", {"optional_parameters", "float"} }} }, 
{ "LeakyRelu", {{"X", {"inputs", "Tensor*"} }, {"Y", {"outputs", "Tensor*"} }, {"alpha", {"optional_parameters", "float"} }} }, 
{ "Elu", {{"X", {"inputs", "Tensor*"} }, {"Y", {"outputs", "Tensor*"} }, {"alpha", {"optional_parameters", "float"} }} }, 
{ "GlobalAveragePool", {{"X", {"inputs", "Tensor*"} }, {"Y", {"outputs", "Tensor*"} }} }, 
{ "Gemm", {{"A", {"inputs", "Tensor*"} }, {"B", {"inputs", "Tensor*"} }, {"C", {"inputs", "Tensor*"} }, {"Y", {"outputs", "Tensor*"} }, {"alpha", {"optional_parameters", "float"} }, {"beta", {"optional_parameters", "float"} }, {"transA", {"optional_parameters", "int"} }, {"transB", {"optional_parameters", "int"} }} }, 
{ "MaxPool", {{"X", {"inputs", "Tensor*"} }, {"Y", {"outputs", "Tensor*"} }, {"Indices", {"optional_output", "Tensor*"} }, {"kernel_shape", {"parameters", "Shape_t"} }, {"auto_pad", {"optional_parameters", "int"} }, {"ceil_mode", {"optional_parameters", "int"} }, {"dilations", {"optional_parameters", "Shape_t"} }, {"pads", {"optional_parameters", "Shape_t"} }, {"storage_order", {"optional_parameters", "int"} }, {"strides", {"optional_parameters", "Shape_t"} }} }, 
{ "Equal", {{"A", {"inputs", "Tensor*"} }, {"B", {"inputs", "Tensor*"} }, {"C", {"outputs", "Tensor*"} }} }, 
{ "Tile", {{"input", {"inputs", "Tensor*"} }, {"repeats", {"inputs", "Tensor*"} }, {"output", {"outputs", "Tensor*"} }} }, 
{ "Flatten", {{"input", {"inputs", "Tensor*"} }, {"output", {"outputs", "Tensor*"} }, {"axis", {"optional_parameters", "int"} }} }, 
{ "Floor", {{"X", {"inputs", "Tensor*"} }, {"Y", {"outputs", "Tensor*"} }} }, 
{ "GRU", {{"X", {"inputs", "Tensor*"} }, {"W", {"inputs", "Tensor*"} }, {"R", {"inputs", "Tensor*"} }, {"B", {"optional_input", "Tensor*"} }, {"sequence_lens", {"optional_input", "Tensor*"} }, {"initial_h", {"optional_input", "Tensor*"} }, {"Y", {"optional_output", "Tensor*"} }, {"Y_h", {"optional_output", "Tensor*"} }, {"activation_alpha", {"optional_parameters", "Tensor*"} }, {"activation_beta", {"optional_parameters", "Tensor*"} }, {"activations", {"optional_parameters", "Tensor*"} }, {"clip", {"optional_parameters", "float"} }, {"direction", {"optional_parameters", "int"} }, {"hidden_size", {"optional_parameters", "int"} }, {"linear_before_reset", {"optional_parameters", "int"} }} }, 
{ "GlobalLpPool", {{"X", {"inputs", "Tensor*"} }, {"Y", {"outputs", "Tensor*"} }, {"p", {"optional_parameters", "int"} }} }, 
{ "Greater", {{"A", {"inputs", "Tensor*"} }, {"B", {"inputs", "Tensor*"} }, {"C", {"outputs", "Tensor*"} }} }, 
{ "HardSigmoid", {{"X", {"inputs", "Tensor*"} }, {"Y", {"outputs", "Tensor*"} }, {"alpha", {"optional_parameters", "float"} }, {"beta", {"optional_parameters", "float"} }} }, 
{ "Selu", {{"X", {"inputs", "Tensor*"} }, {"Y", {"outputs", "Tensor*"} }, {"alpha", {"optional_parameters", "float"} }, {"gamma", {"optional_parameters", "float"} }} }, 
{ "Hardmax", {{"input", {"inputs", "Tensor*"} }, {"output", {"outputs", "Tensor*"} }, {"axis", {"optional_parameters", "int"} }} }, 
{ "If", {{"cond", {"inputs", "Tensor*"} }, {"else_branch", {"parameters", "int"} }, {"then_branch", {"parameters", "int"} }} }, 
{ "Min", {{"min", {"outputs", "Tensor*"} }} }, 
{ "InstanceNormalization", {{"input", {"inputs", "Tensor*"} }, {"scale", {"inputs", "Tensor*"} }, {"B", {"inputs", "Tensor*"} }, {"output", {"outputs", "Tensor*"} }, {"epsilon", {"optional_parameters", "float"} }} }, 
{ "Less", {{"A", {"inputs", "Tensor*"} }, {"B", {"inputs", "Tensor*"} }, {"C", {"outputs", "Tensor*"} }} }, 
{ "EyeLike", {{"input", {"inputs", "Tensor*"} }, {"output", {"outputs", "Tensor*"} }, {"dtype", {"optional_parameters", "int"} }, {"k", {"optional_parameters", "int"} }} }, 
{ "RandomNormal", {{"output", {"outputs", "Tensor*"} }, {"shape", {"parameters", "Shape_t"} }, {"dtype", {"optional_parameters", "int"} }, {"mean", {"optional_parameters", "float"} }, {"scale", {"optional_parameters", "float"} }, {"seed", {"optional_parameters", "float"} }} }, 
{ "Slice", {{"data", {"inputs", "Tensor*"} }, {"starts", {"inputs", "Tensor*"} }, {"ends", {"inputs", "Tensor*"} }, {"axes", {"optional_input", "Tensor*"} }, {"steps", {"optional_input", "Tensor*"} }, {"output", {"outputs", "Tensor*"} }} }, 
{ "PRelu", {{"X", {"inputs", "Tensor*"} }, {"slope", {"inputs", "Tensor*"} }, {"Y", {"outputs", "Tensor*"} }} }, 
{ "Log", {{"input", {"inputs", "Tensor*"} }, {"output", {"outputs", "Tensor*"} }} }, 
{ "LogSoftmax", {{"input", {"inputs", "Tensor*"} }, {"output", {"outputs", "Tensor*"} }, {"axis", {"optional_parameters", "int"} }} }, 
{ "Loop", {{"M", {"optional_input", "Tensor*"} }, {"cond", {"optional_input", "Tensor*"} }, {"body", {"parameters", "int"} }} }, 
{ "LpNormalization", {{"input", {"inputs", "Tensor*"} }, {"output", {"outputs", "Tensor*"} }, {"axis", {"optional_parameters", "int"} }, {"p", {"optional_parameters", "int"} }} }, 
{ "MatMul", {{"A", {"inputs", "Tensor*"} }, {"B", {"inputs", "Tensor*"} }, {"Y", {"outputs", "Tensor*"} }} }, 
{ "ReduceL2", {{"data", {"inputs", "Tensor*"} }, {"reduced", {"outputs", "Tensor*"} }, {"axes", {"optional_parameters", "Shape_t"} }, {"keepdims", {"optional_parameters", "int"} }} }, 
{ "Max", {{"max", {"outputs", "Tensor*"} }} }, 
{ "MaxRoiPool", {{"X", {"inputs", "Tensor*"} }, {"rois", {"inputs", "Tensor*"} }, {"Y", {"outputs", "Tensor*"} }, {"pooled_shape", {"parameters", "Shape_t"} }, {"spatial_scale", {"optional_parameters", "float"} }} }, 
{ "Or", {{"A", {"inputs", "Tensor*"} }, {"B", {"inputs", "Tensor*"} }, {"C", {"outputs", "Tensor*"} }} }, 
{ "Pad", {{"data", {"inputs", "Tensor*"} }, {"output", {"outputs", "Tensor*"} }, {"pads", {"parameters", "Shape_t"} }, {"mode", {"optional_parameters", "int"} }, {"value", {"optional_parameters", "float"} }} }, 
{ "RandomUniformLike", {{"input", {"inputs", "Tensor*"} }, {"output", {"outputs", "Tensor*"} }, {"dtype", {"optional_parameters", "int"} }, {"high", {"optional_parameters", "float"} }, {"low", {"optional_parameters", "float"} }, {"seed", {"optional_parameters", "float"} }} }, 
{ "Reciprocal", {{"X", {"inputs", "Tensor*"} }, {"Y", {"outputs", "Tensor*"} }} }, 
{ "Pow", {{"X", {"inputs", "Tensor*"} }, {"Y", {"inputs", "Tensor*"} }, {"Z", {"outputs", "Tensor*"} }} }, 
{ "RandomNormalLike", {{"input", {"inputs", "Tensor*"} }, {"output", {"outputs", "Tensor*"} }, {"dtype", {"optional_parameters", "int"} }, {"mean", {"optional_parameters", "float"} }, {"scale", {"optional_parameters", "float"} }, {"seed", {"optional_parameters", "float"} }} }, 
{ "OneHot", {{"indices", {"inputs", "Tensor*"} }, {"depth", {"inputs", "Tensor*"} }, {"values", {"inputs", "Tensor*"} }, {"output", {"outputs", "Tensor*"} }, {"axis", {"optional_parameters", "int"} }} }, 
{ "RandomUniform", {{"output", {"outputs", "Tensor*"} }, {"shape", {"parameters", "Shape_t"} }, {"dtype", {"optional_parameters", "int"} }, {"high", {"optional_parameters", "float"} }, {"low", {"optional_parameters", "float"} }, {"seed", {"optional_parameters", "float"} }} }, 
{ "ReduceL1", {{"data", {"inputs", "Tensor*"} }, {"reduced", {"outputs", "Tensor*"} }, {"axes", {"optional_parameters", "Shape_t"} }, {"keepdims", {"optional_parameters", "int"} }} }, 
{ "ReduceLogSum", {{"data", {"inputs", "Tensor*"} }, {"reduced", {"outputs", "Tensor*"} }, {"axes", {"optional_parameters", "Shape_t"} }, {"keepdims", {"optional_parameters", "int"} }} }, 
{ "ReduceLogSumExp", {{"data", {"inputs", "Tensor*"} }, {"reduced", {"outputs", "Tensor*"} }, {"axes", {"optional_parameters", "Shape_t"} }, {"keepdims", {"optional_parameters", "int"} }} }, 
{ "ReduceMax", {{"data", {"inputs", "Tensor*"} }, {"reduced", {"outputs", "Tensor*"} }, {"axes", {"optional_parameters", "Shape_t"} }, {"keepdims", {"optional_parameters", "int"} }} }, 
{ "OneHotEncoder", {{"X", {"inputs", "Tensor*"} }, {"Y", {"outputs", "Tensor*"} }, {"cats_int64s", {"optional_parameters", "Shape_t"} }, {"cats_strings", {"optional_parameters", "Tensor*"} }, {"zeros", {"optional_parameters", "int"} }} }, 
{ "IsNaN", {{"X", {"inputs", "Tensor*"} }, {"Y", {"outputs", "Tensor*"} }} }, 
{ "ReduceMean", {{"data", {"inputs", "Tensor*"} }, {"reduced", {"outputs", "Tensor*"} }, {"axes", {"optional_parameters", "Shape_t"} }, {"keepdims", {"optional_parameters", "int"} }} }, 
{ "ReduceMin", {{"data", {"inputs", "Tensor*"} }, {"reduced", {"outputs", "Tensor*"} }, {"axes", {"optional_parameters", "Shape_t"} }, {"keepdims", {"optional_parameters", "int"} }} }, 
{ "TreeEnsembleRegressor", {{"X", {"inputs", "Tensor*"} }, {"Y", {"outputs", "Tensor*"} }, {"aggregate_function", {"optional_parameters", "int"} }, {"base_values", {"optional_parameters", "Tensor*"} }, {"n_targets", {"optional_parameters", "int"} }, {"nodes_falsenodeids", {"optional_parameters", "Shape_t"} }, {"nodes_featureids", {"optional_parameters", "Shape_t"} }, {"nodes_hitrates", {"optional_parameters", "Tensor*"} }, {"nodes_missing_value_tracks_true", {"optional_parameters", "Shape_t"} }, {"nodes_modes", {"optional_parameters", "Tensor*"} }, {"nodes_nodeids", {"optional_parameters", "Shape_t"} }, {"nodes_treeids", {"optional_parameters", "Shape_t"} }, {"nodes_truenodeids", {"optional_parameters", "Shape_t"} }, {"nodes_values", {"optional_parameters", "Tensor*"} }, {"post_transform", {"optional_parameters", "int"} }, {"target_ids", {"optional_parameters", "Shape_t"} }, {"target_nodeids", {"optional_parameters", "Shape_t"} }, {"target_treeids", {"optional_parameters", "Shape_t"} }, {"target_weights", {"optional_parameters", "Tensor*"} }} }, 
{ "ReduceProd", {{"data", {"inputs", "Tensor*"} }, {"reduced", {"outputs", "Tensor*"} }, {"axes", {"optional_parameters", "Shape_t"} }, {"keepdims", {"optional_parameters", "int"} }} }, 
{ "ReduceSum", {{"data", {"inputs", "Tensor*"} }, {"reduced", {"outputs", "Tensor*"} }, {"axes", {"optional_parameters", "Shape_t"} }, {"keepdims", {"optional_parameters", "int"} }} }, 
{ "ReduceSumSquare", {{"data", {"inputs", "Tensor*"} }, {"reduced", {"outputs", "Tensor*"} }, {"axes", {"optional_parameters", "Shape_t"} }, {"keepdims", {"optional_parameters", "int"} }} }, 
{ "Relu", {{"X", {"inputs", "Tensor*"} }, {"Y", {"outputs", "Tensor*"} }} }, 
{ "Reshape", {{"data", {"inputs", "Tensor*"} }, {"shape", {"inputs", "Tensor*"} }, {"reshaped", {"outputs", "Tensor*"} }} }, 
{ "Shape", {{"data", {"inputs", "Tensor*"} }, {"shape", {"outputs", "Tensor*"} }} }, 
{ "Sigmoid", {{"X", {"inputs", "Tensor*"} }, {"Y", {"outputs", "Tensor*"} }} }, 
{ "Size", {{"data", {"inputs", "Tensor*"} }, {"size", {"outputs", "Tensor*"} }} }, 
{ "Softmax", {{"input", {"inputs", "Tensor*"} }, {"output", {"outputs", "Tensor*"} }, {"axis", {"optional_parameters", "int"} }} }, 
{ "Softplus", {{"X", {"inputs", "Tensor*"} }, {"Y", {"outputs", "Tensor*"} }} }, 
{ "Softsign", {{"input", {"inputs", "Tensor*"} }, {"output", {"outputs", "Tensor*"} }} }, 
{ "SpaceToDepth", {{"input", {"inputs", "Tensor*"} }, {"output", {"outputs", "Tensor*"} }, {"blocksize", {"parameters", "int"} }} }, 
{ "TfIdfVectorizer", {{"X", {"inputs", "Tensor*"} }, {"Y", {"outputs", "Tensor*"} }, {"max_gram_length", {"parameters", "int"} }, {"max_skip_count", {"parameters", "int"} }, {"min_gram_length", {"parameters", "int"} }, {"mode", {"parameters", "int"} }, {"ngram_counts", {"parameters", "Shape_t"} }, {"ngram_indexes", {"parameters", "Shape_t"} }, {"pool_int64s", {"optional_parameters", "Shape_t"} }, {"pool_strings", {"optional_parameters", "Tensor*"} }, {"weights", {"optional_parameters", "Tensor*"} }} }, 
{ "Split", {{"input", {"inputs", "Tensor*"} }, {"axis", {"optional_parameters", "int"} }, {"split", {"optional_parameters", "Shape_t"} }} }, 
{ "Imputer", {{"X", {"inputs", "Tensor*"} }, {"Y", {"outputs", "Tensor*"} }, {"imputed_value_floats", {"optional_parameters", "Tensor*"} }, {"imputed_value_int64s", {"optional_parameters", "Shape_t"} }, {"replaced_value_float", {"optional_parameters", "float"} }, {"replaced_value_int64", {"optional_parameters", "int"} }} }, 
{ "Sqrt", {{"X", {"inputs", "Tensor*"} }, {"Y", {"outputs", "Tensor*"} }} }, 
{ "Squeeze", {{"data", {"inputs", "Tensor*"} }, {"squeezed", {"outputs", "Tensor*"} }, {"axes", {"optional_parameters", "Shape_t"} }} }, 
{ "TopK", {{"X", {"inputs", "Tensor*"} }, {"K", {"inputs", "Tensor*"} }, {"Values", {"outputs", "Tensor*"} }, {"Indices", {"outputs", "Tensor*"} }, {"axis", {"optional_parameters", "int"} }} }, 
{ "Sub", {{"A", {"inputs", "Tensor*"} }, {"B", {"inputs", "Tensor*"} }, {"C", {"outputs", "Tensor*"} }} }, 
{ "Sum", {{"sum", {"outputs", "Tensor*"} }} }, 
{ "Shrink", {{"input", {"inputs", "Tensor*"} }, {"output", {"outputs", "Tensor*"} }, {"bias", {"optional_parameters", "float"} }, {"lambd", {"optional_parameters", "float"} }} }, 
{ "Tanh", {{"input", {"inputs", "Tensor*"} }, {"output", {"outputs", "Tensor*"} }} }, 
{ "Transpose", {{"data", {"inputs", "Tensor*"} }, {"transposed", {"outputs", "Tensor*"} }, {"perm", {"optional_parameters", "Shape_t"} }} }, 
{ "Unsqueeze", {{"data", {"inputs", "Tensor*"} }, {"expanded", {"outputs", "Tensor*"} }, {"axes", {"parameters", "Shape_t"} }} }, 
{ "SVMClassifier", {{"X", {"inputs", "Tensor*"} }, {"Y", {"outputs", "Tensor*"} }, {"Z", {"outputs", "Tensor*"} }, {"classlabels_ints", {"optional_parameters", "Shape_t"} }, {"classlabels_strings", {"optional_parameters", "Tensor*"} }, {"coefficients", {"optional_parameters", "Tensor*"} }, {"kernel_params", {"optional_parameters", "Tensor*"} }, {"kernel_type", {"optional_parameters", "int"} }, {"post_transform", {"optional_parameters", "int"} }, {"prob_a", {"optional_parameters", "Tensor*"} }, {"prob_b", {"optional_parameters", "Tensor*"} }, {"rho", {"optional_parameters", "Tensor*"} }, {"support_vectors", {"optional_parameters", "Tensor*"} }, {"vectors_per_class", {"optional_parameters", "Shape_t"} }} }, 
{ "Xor", {{"A", {"inputs", "Tensor*"} }, {"B", {"inputs", "Tensor*"} }, {"C", {"outputs", "Tensor*"} }} }, 
{ "Acos", {{"input", {"inputs", "Tensor*"} }, {"output", {"outputs", "Tensor*"} }} }, 
{ "Asin", {{"input", {"inputs", "Tensor*"} }, {"output", {"outputs", "Tensor*"} }} }, 
{ "Atan", {{"input", {"inputs", "Tensor*"} }, {"output", {"outputs", "Tensor*"} }} }, 
{ "Cos", {{"input", {"inputs", "Tensor*"} }, {"output", {"outputs", "Tensor*"} }} }, 
{ "Sin", {{"input", {"inputs", "Tensor*"} }, {"output", {"outputs", "Tensor*"} }} }, 
{ "Tan", {{"input", {"inputs", "Tensor*"} }, {"output", {"outputs", "Tensor*"} }} }, 
{ "Multinomial", {{"input", {"inputs", "Tensor*"} }, {"output", {"outputs", "Tensor*"} }, {"dtype", {"optional_parameters", "int"} }, {"sample_size", {"optional_parameters", "int"} }, {"seed", {"optional_parameters", "float"} }} }, 
{ "Scan", {{"body", {"parameters", "int"} }, {"num_scan_inputs", {"parameters", "int"} }, {"scan_input_axes", {"optional_parameters", "Shape_t"} }, {"scan_input_directions", {"optional_parameters", "Shape_t"} }, {"scan_output_axes", {"optional_parameters", "Shape_t"} }, {"scan_output_directions", {"optional_parameters", "Shape_t"} }} }, 
{ "Compress", {{"input", {"inputs", "Tensor*"} }, {"condition", {"inputs", "Tensor*"} }, {"output", {"outputs", "Tensor*"} }, {"axis", {"optional_parameters", "int"} }} }, 
{ "ConstantOfShape", {{"input", {"inputs", "Tensor*"} }, {"output", {"outputs", "Tensor*"} }, {"value", {"optional_parameters", "Tensor*"} }} }, 
{ "MaxUnpool", {{"X", {"inputs", "Tensor*"} }, {"I", {"inputs", "Tensor*"} }, {"output_shape", {"optional_input", "Tensor*"} }, {"output", {"outputs", "Tensor*"} }, {"kernel_shape", {"parameters", "Shape_t"} }, {"pads", {"optional_parameters", "Shape_t"} }, {"strides", {"optional_parameters", "Shape_t"} }} }, 
{ "Scatter", {{"data", {"inputs", "Tensor*"} }, {"indices", {"inputs", "Tensor*"} }, {"updates", {"inputs", "Tensor*"} }, {"output", {"outputs", "Tensor*"} }, {"axis", {"optional_parameters", "int"} }} }, 
{ "Sinh", {{"input", {"inputs", "Tensor*"} }, {"output", {"outputs", "Tensor*"} }} }, 
{ "Cosh", {{"input", {"inputs", "Tensor*"} }, {"output", {"outputs", "Tensor*"} }} }, 
{ "Asinh", {{"input", {"inputs", "Tensor*"} }, {"output", {"outputs", "Tensor*"} }} }, 
{ "Acosh", {{"input", {"inputs", "Tensor*"} }, {"output", {"outputs", "Tensor*"} }} }, 
{ "NonMaxSuppression", {{"boxes", {"inputs", "Tensor*"} }, {"scores", {"inputs", "Tensor*"} }, {"max_output_boxes_per_class", {"optional_input", "Tensor*"} }, {"iou_threshold", {"optional_input", "Tensor*"} }, {"score_threshold", {"optional_input", "Tensor*"} }, {"selected_indices", {"outputs", "Tensor*"} }, {"center_point_box", {"optional_parameters", "int"} }} }, 
{ "Atanh", {{"input", {"inputs", "Tensor*"} }, {"output", {"outputs", "Tensor*"} }} }, 
{ "Sign", {{"input", {"inputs", "Tensor*"} }, {"output", {"outputs", "Tensor*"} }} }, 
{ "Erf", {{"input", {"inputs", "Tensor*"} }, {"output", {"outputs", "Tensor*"} }} }, 
{ "Where", {{"condition", {"inputs", "Tensor*"} }, {"X", {"inputs", "Tensor*"} }, {"Y", {"inputs", "Tensor*"} }, {"output", {"outputs", "Tensor*"} }} }, 
{ "NonZero", {{"X", {"inputs", "Tensor*"} }, {"Y", {"outputs", "Tensor*"} }} }, 
{ "MeanVarianceNormalization", {{"X", {"inputs", "Tensor*"} }, {"Y", {"outputs", "Tensor*"} }, {"axes", {"optional_parameters", "Shape_t"} }} }, 
{ "StringNormalizer", {{"X", {"inputs", "Tensor*"} }, {"Y", {"outputs", "Tensor*"} }, {"case_change_action", {"optional_parameters", "int"} }, {"is_case_sensitive", {"optional_parameters", "int"} }, {"locale", {"optional_parameters", "int"} }, {"stopwords", {"optional_parameters", "Tensor*"} }} }, 
{ "Mod", {{"A", {"inputs", "Tensor*"} }, {"B", {"inputs", "Tensor*"} }, {"C", {"outputs", "Tensor*"} }, {"fmod", {"optional_parameters", "int"} }} }, 
{ "ThresholdedRelu", {{"X", {"inputs", "Tensor*"} }, {"Y", {"outputs", "Tensor*"} }, {"alpha", {"optional_parameters", "float"} }} }, 
{ "MatMulInteger", {{"A", {"inputs", "Tensor*"} }, {"B", {"inputs", "Tensor*"} }, {"a_zero_point", {"optional_input", "Tensor*"} }, {"b_zero_point", {"optional_input", "Tensor*"} }, {"Y", {"outputs", "Tensor*"} }} }, 
{ "QLinearMatMul", {{"a", {"inputs", "Tensor*"} }, {"a_scale", {"inputs", "Tensor*"} }, {"a_zero_point", {"inputs", "Tensor*"} }, {"b", {"inputs", "Tensor*"} }, {"b_scale", {"inputs", "Tensor*"} }, {"b_zero_point", {"inputs", "Tensor*"} }, {"y_scale", {"inputs", "Tensor*"} }, {"y_zero_point", {"inputs", "Tensor*"} }, {"y", {"outputs", "Tensor*"} }} }, 
{ "ConvInteger", {{"x", {"inputs", "Tensor*"} }, {"w", {"inputs", "Tensor*"} }, {"x_zero_point", {"optional_input", "Tensor*"} }, {"w_zero_point", {"optional_input", "Tensor*"} }, {"y", {"outputs", "Tensor*"} }, {"auto_pad", {"optional_parameters", "int"} }, {"dilations", {"optional_parameters", "Shape_t"} }, {"group", {"optional_parameters", "int"} }, {"kernel_shape", {"optional_parameters", "Shape_t"} }, {"pads", {"optional_parameters", "Shape_t"} }, {"strides", {"optional_parameters", "Shape_t"} }} }, 
{ "QLinearConv", {{"x", {"inputs", "Tensor*"} }, {"x_scale", {"inputs", "Tensor*"} }, {"x_zero_point", {"inputs", "Tensor*"} }, {"w", {"inputs", "Tensor*"} }, {"w_scale", {"inputs", "Tensor*"} }, {"w_zero_point", {"inputs", "Tensor*"} }, {"y_scale", {"inputs", "Tensor*"} }, {"y_zero_point", {"inputs", "Tensor*"} }, {"B", {"optional_input", "Tensor*"} }, {"y", {"outputs", "Tensor*"} }, {"auto_pad", {"optional_parameters", "int"} }, {"dilations", {"optional_parameters", "Shape_t"} }, {"group", {"optional_parameters", "int"} }, {"kernel_shape", {"optional_parameters", "Shape_t"} }, {"pads", {"optional_parameters", "Shape_t"} }, {"strides", {"optional_parameters", "Shape_t"} }} }, 
{ "QuantizeLinear", {{"x", {"inputs", "Tensor*"} }, {"y_scale", {"inputs", "Tensor*"} }, {"y_zero_point", {"optional_input", "Tensor*"} }, {"y", {"outputs", "Tensor*"} }} }, 
{ "DequantizeLinear", {{"x", {"inputs", "Tensor*"} }, {"x_scale", {"inputs", "Tensor*"} }, {"x_zero_point", {"optional_input", "Tensor*"} }, {"y", {"outputs", "Tensor*"} }} }, 
{ "IsInf", {{"X", {"inputs", "Tensor*"} }, {"Y", {"outputs", "Tensor*"} }, {"detect_negative", {"optional_parameters", "int"} }, {"detect_positive", {"optional_parameters", "int"} }} }, 
{ "RoiAlign", {{"X", {"inputs", "Tensor*"} }, {"rois", {"inputs", "Tensor*"} }, {"batch_indices", {"inputs", "Tensor*"} }, {"Y", {"outputs", "Tensor*"} }, {"mode", {"optional_parameters", "int"} }, {"output_height", {"optional_parameters", "int"} }, {"output_width", {"optional_parameters", "int"} }, {"sampling_ratio", {"optional_parameters", "int"} }, {"spatial_scale", {"optional_parameters", "float"} }} }, 
{ "ArrayFeatureExtractor", {{"X", {"inputs", "Tensor*"} }, {"Y", {"inputs", "Tensor*"} }, {"Z", {"outputs", "Tensor*"} }} }, 
{ "Binarizer", {{"X", {"inputs", "Tensor*"} }, {"Y", {"outputs", "Tensor*"} }, {"threshold", {"optional_parameters", "float"} }} }, 
{ "CategoryMapper", {{"X", {"inputs", "Tensor*"} }, {"Y", {"outputs", "Tensor*"} }, {"cats_int64s", {"optional_parameters", "Shape_t"} }, {"cats_strings", {"optional_parameters", "Tensor*"} }, {"default_int64", {"optional_parameters", "int"} }, {"default_string", {"optional_parameters", "int"} }} }, 
{ "DictVectorizer", {{"X", {"inputs", "Tensor*"} }, {"Y", {"outputs", "Tensor*"} }, {"int64_vocabulary", {"optional_parameters", "Shape_t"} }, {"string_vocabulary", {"optional_parameters", "Tensor*"} }} }, 
{ "FeatureVectorizer", {{"Y", {"outputs", "Tensor*"} }, {"inputdimensions", {"optional_parameters", "Shape_t"} }} }, 
{ "LabelEncoder", {{"X", {"inputs", "Tensor*"} }, {"Y", {"outputs", "Tensor*"} }, {"default_float", {"optional_parameters", "float"} }, {"default_int64", {"optional_parameters", "int"} }, {"default_string", {"optional_parameters", "int"} }, {"keys_floats", {"optional_parameters", "Tensor*"} }, {"keys_int64s", {"optional_parameters", "Shape_t"} }, {"keys_strings", {"optional_parameters", "Tensor*"} }, {"values_floats", {"optional_parameters", "Tensor*"} }, {"values_int64s", {"optional_parameters", "Shape_t"} }, {"values_strings", {"optional_parameters", "Tensor*"} }} }, 
{ "LinearClassifier", {{"X", {"inputs", "Tensor*"} }, {"Y", {"outputs", "Tensor*"} }, {"Z", {"outputs", "Tensor*"} }, {"coefficients", {"parameters", "Tensor*"} }, {"classlabels_ints", {"optional_parameters", "Shape_t"} }, {"classlabels_strings", {"optional_parameters", "Tensor*"} }, {"intercepts", {"optional_parameters", "Tensor*"} }, {"multi_class", {"optional_parameters", "int"} }, {"post_transform", {"optional_parameters", "int"} }} }, 
{ "LinearRegressor", {{"X", {"inputs", "Tensor*"} }, {"Y", {"outputs", "Tensor*"} }, {"coefficients", {"optional_parameters", "Tensor*"} }, {"intercepts", {"optional_parameters", "Tensor*"} }, {"post_transform", {"optional_parameters", "int"} }, {"targets", {"optional_parameters", "int"} }} }, 
{ "Normalizer", {{"X", {"inputs", "Tensor*"} }, {"Y", {"outputs", "Tensor*"} }, {"norm", {"optional_parameters", "int"} }} }, 
{ "SVMRegressor", {{"X", {"inputs", "Tensor*"} }, {"Y", {"outputs", "Tensor*"} }, {"coefficients", {"optional_parameters", "Tensor*"} }, {"kernel_params", {"optional_parameters", "Tensor*"} }, {"kernel_type", {"optional_parameters", "int"} }, {"n_supports", {"optional_parameters", "int"} }, {"one_class", {"optional_parameters", "int"} }, {"post_transform", {"optional_parameters", "int"} }, {"rho", {"optional_parameters", "Tensor*"} }, {"support_vectors", {"optional_parameters", "Tensor*"} }} }, 
{ "Scaler", {{"X", {"inputs", "Tensor*"} }, {"Y", {"outputs", "Tensor*"} }, {"offset", {"optional_parameters", "Tensor*"} }, {"scale", {"optional_parameters", "Tensor*"} }} }, 
{ "TreeEnsembleClassifier", {{"X", {"inputs", "Tensor*"} }, {"Y", {"outputs", "Tensor*"} }, {"Z", {"outputs", "Tensor*"} }, {"base_values", {"optional_parameters", "Tensor*"} }, {"class_ids", {"optional_parameters", "Shape_t"} }, {"class_nodeids", {"optional_parameters", "Shape_t"} }, {"class_treeids", {"optional_parameters", "Shape_t"} }, {"class_weights", {"optional_parameters", "Tensor*"} }, {"classlabels_int64s", {"optional_parameters", "Shape_t"} }, {"classlabels_strings", {"optional_parameters", "Tensor*"} }, {"nodes_falsenodeids", {"optional_parameters", "Shape_t"} }, {"nodes_featureids", {"optional_parameters", "Shape_t"} }, {"nodes_hitrates", {"optional_parameters", "Tensor*"} }, {"nodes_missing_value_tracks_true", {"optional_parameters", "Shape_t"} }, {"nodes_modes", {"optional_parameters", "Tensor*"} }, {"nodes_nodeids", {"optional_parameters", "Shape_t"} }, {"nodes_treeids", {"optional_parameters", "Shape_t"} }, {"nodes_truenodeids", {"optional_parameters", "Shape_t"} }, {"nodes_values", {"optional_parameters", "Tensor*"} }, {"post_transform", {"optional_parameters", "int"} }} }, 
{ "ZipMap", {{"X", {"inputs", "Tensor*"} }, {"Z", {"outputs", "Tensor*"} }, {"classlabels_int64s", {"optional_parameters", "Shape_t"} }, {"classlabels_strings", {"optional_parameters", "Tensor*"} }} }
};


}
    