
#version 450
struct Shape_t { uint n; uint c; uint d; uint h; uint w; };

layout(local_size_x_id = 0) in;
layout(local_size_y_id = 1) in;
layout(local_size_z_id = 2) in;

layout(push_constant) uniform Parameters {      
  
//input
    Shape_t X_i; Shape_t I_i;
    Shape_t output_shape_i;
//output
    Shape_t output_o;
    
} params;

layout(std430, binding = 0) buffer lay0 { float X_i[]; };
layout(std430, binding = 1) buffer lay1 { float I_i[]; };
layout(std430, binding = 2) buffer lay2 { float output_shape_i[]; };
layout(std430, binding = 3) buffer lay3 { float output_o[]; };

void main(){
    const uint idx = gl_GlobalInvocationID.x;
    const uint idy = gl_GlobalInvocationID.y;
    const uint idz = gl_GlobalInvocationID.z;
    ////const uint X_i_size = params.X_i.n * params.X_i.c * params.X_i.d * params.X_i.w * params.X_i.h;
	//const uint I_i_size = params.I_i.n * params.I_i.c * params.I_i.d * params.I_i.w * params.I_i.h;
    ////const uint output_shape_i_size = params.output_shape_i.n * params.output_shape_i.c * params.output_shape_i.d * params.output_shape_i.w * params.output_shape_i.h;
    ////const uint output_o_size = params.output_o.n * params.output_o.c * params.output_o.d * params.output_o.w * params.output_o.h;
    //

    //if(5 <= idx) {
    //    return;
    //}
    return;
}
