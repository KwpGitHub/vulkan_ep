
#version 450
struct Shape_t { uint n; uint c; uint d; uint h; uint w; };

layout(local_size_x_id = 0) in;
layout(local_size_y_id = 1) in;
layout(local_size_z_id = 2) in;

layout(push_constant) uniform Parameters {      
  
//input
    Shape_t X_i; Shape_t rois_i; Shape_t batch_indices_i;
    
//output
    Shape_t Y_o;
    
} params;

layout(std430, binding = 0) buffer lay0 { float X_i[]; };
layout(std430, binding = 1) buffer lay1 { float rois_i[]; };
layout(std430, binding = 2) buffer lay2 { float batch_indices_i[]; };
layout(std430, binding = 3) buffer lay3 { float Y_o[]; };

void main(){
    const uint idx = gl_GlobalInvocationID.x;
    const uint idy = gl_GlobalInvocationID.y;
    const uint idz = gl_GlobalInvocationID.z;
    ////const uint X_i_size = params.X_i.n * params.X_i.c * params.X_i.d * params.X_i.w * params.X_i.h;
	//const uint rois_i_size = params.rois_i.n * params.rois_i.c * params.rois_i.d * params.rois_i.w * params.rois_i.h;
	//const uint batch_indices_i_size = params.batch_indices_i.n * params.batch_indices_i.c * params.batch_indices_i.d * params.batch_indices_i.w * params.batch_indices_i.h;
    //
    ////const uint Y_o_size = params.Y_o.n * params.Y_o.c * params.Y_o.d * params.Y_o.w * params.Y_o.h;
    //

    //if(5 <= idx) {
    //    return;
    //}
    return;
}
