
#version 450
struct Shape_t { uint n; uint c; uint d; uint h; uint w; };

 layout(local_size_x_id = 0) in;               
 layout(local_size_y_id = 1) in;
 layout(local_size_z_id = 2) in;

layout(push_constant) uniform Parameters {      
   int t;
} params;

layout(std430, binding = 0) buffer lay0 { Shape_t shape[]; };
layout(std430, binding = 1) buffer lay1 { float input_i[]; };


void main(){
    const uint x = gl_GlobalInvocationID.x;
    const uint y = gl_GlobalInvocationID.y;
    const uint z = gl_GlobalInvocationID.z;

    uint n = shape[0].n;
    
    if(x >= shape[0].w || y >= shape[0].h || z >= shape[0].d){
        return;
    }
    for(uint i = 0; i < n; i++){
        for(uint j = 0; j < shape[0].c; j++){
            uint indx = x + uint(y*shape[0].w) + uint(z*shape[0].w*shape[0].h) + uint(j*shape[0].w*shape[0].h*shape[0].d) + uint(i*shape[0].w*shape[0].h*shape[0].d*shape[0].c);
            //uint indx = x + uint(y * shape[0].w) + uint(z * shape[0].h * shape[0].w);
            //input_i[indx] = 1;
            input_i[indx] = input_i[indx];
        }
    }
       

}
