
#version 450
struct Shape_t { uint n; uint c; uint d; uint h; uint w; };

layout(local_size_x_id = 0) in;
layout(local_size_y_id = 1) in;
layout(local_size_z_id = 2) in;

layout(push_constant) uniform Parameters {      
   uint x;
} params;

layout(std430, binding = 0) buffer lay0 { Shape_t shape[]; };
layout(std430, binding = 1) buffer lay1 { float data_i[]; };
layout(std430, binding = 2) buffer lay2 { float shape_o[]; };


void main(){
    const uint x = gl_GlobalInvocationID.x;
    const uint y = gl_GlobalInvocationID.y;
    const uint z = gl_GlobalInvocationID.z;

	vec4 data_i_shape = vec4(shape[0].c, shape[0].d, shape[0].h, shape[0].w);
	vec4 shape_o_shape = vec4(shape[1].c, shape[1].d, shape[1].h, shape[1].w);
    uint n = shape[0].n;
    
    if(x >= shape[0].w || y >= shape[0].h || z >= shape[0].d){
        return;
    }
    for(uint i = 0; i < n; i++){
        for(uint j = 0; j < shape[0].c; j++){
           
            uint indx = x + uint(y*data_i_shape.x)                        + uint(z*data_i_shape.x*data_i_shape.y)                        + uint(j*data_i_shape.x*data_i_shape.y*data_i_shape.z)                        + uint(i*data_i_shape.x*data_i_shape.y*data_i_shape.z*data_i_shape.w);

            data_i[indx] = shape_o[indx];
        }
    }
       

}
