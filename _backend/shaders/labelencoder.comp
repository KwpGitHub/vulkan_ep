
#version 450
struct Shape_t { uint n; uint c; uint d; uint h; uint w; };

layout(local_size_x_id = 0) in;
layout(local_size_y_id = 1) in;
layout(local_size_z_id = 2) in;

layout(push_constant) uniform Parameters {      
    float default_float; int default_int64; int default_string; Shape_t keys_int64s; Shape_t values_int64s;
			Shape_t keys_floats; Shape_t keys_strings; Shape_t values_floats; Shape_t values_strings;
//input
    Shape_t X_i;
    
//output
    Shape_t Y_o;
    
} params;

layout(std430, binding = 0) buffer lay0 { float keys_floats[]; };
layout(std430, binding = 1) buffer lay1 { float keys_strings[]; };
layout(std430, binding = 2) buffer lay2 { float values_floats[]; };
layout(std430, binding = 3) buffer lay3 { float values_strings[]; };
layout(std430, binding = 4) buffer lay4 { float X_i[]; };
layout(std430, binding = 5) buffer lay5 { float Y_o[]; };

void main(){
    const uint idx = gl_GlobalInvocationID.x;
    const uint idy = gl_GlobalInvocationID.y;
    const uint idz = gl_GlobalInvocationID.z;
    const uint keys_floats_size = params.keys_floats.n * params.keys_floats.c * params.keys_floats.d * params.keys_floats.w * params.keys_floats.h;
	const uint keys_strings_size = params.keys_strings.n * params.keys_strings.c * params.keys_strings.d * params.keys_strings.w * params.keys_strings.h;
	const uint values_floats_size = params.values_floats.n * params.values_floats.c * params.values_floats.d * params.values_floats.w * params.values_floats.h;
	const uint values_strings_size = params.values_strings.n * params.values_strings.c * params.values_strings.d * params.values_strings.w * params.values_strings.h;
    const uint X_i_size = params.X_i.n * params.X_i.c * params.X_i.d * params.X_i.w * params.X_i.h;
    
    const uint Y_o_size = params.Y_o.n * params.Y_o.c * params.Y_o.d * params.Y_o.w * params.Y_o.h;
    

    if(size <= idx) {
        return;
    }
   
}
