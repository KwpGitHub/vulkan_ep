
#version 450
struct Shape_t { uint n; uint c; uint d; uint h; uint w; };

layout(local_size_x_id = 0) in;
layout(local_size_y_id = 1) in;
layout(local_size_z_id = 2) in;

layout(push_constant) uniform Parameters {      
    
		
//input
    Shape_t a_input; Shape_t a_scale_input; Shape_t a_zero_point_input; Shape_t b_input; Shape_t b_scale_input; Shape_t b_zero_point_input; Shape_t y_scale_input; Shape_t y_zero_point_input;
    
//output
    Shape_t y_output;
    
} params;

layout(std430, binding = 0) buffer lay0 { float a_input[]; };
layout(std430, binding = 1) buffer lay1 { float a_scale_input[]; };
layout(std430, binding = 2) buffer lay2 { float a_zero_point_input[]; };
layout(std430, binding = 3) buffer lay3 { float b_input[]; };
layout(std430, binding = 4) buffer lay4 { float b_scale_input[]; };
layout(std430, binding = 5) buffer lay5 { float b_zero_point_input[]; };
layout(std430, binding = 6) buffer lay6 { float y_scale_input[]; };
layout(std430, binding = 7) buffer lay7 { float y_zero_point_input[]; };
layout(std430, binding = 8) buffer lay8 { float y_output[]; };

void main(){
    const uint idx = gl_GlobalInvocationID.x;
    const uint idy = gl_GlobalInvocationID.y;
    const uint idz = gl_GlobalInvocationID.z;
    
    const uint a_input_size = params.a_input.n * params.a_input.c * params.a_input.d * params.a_input.w * params.a_input.h;
	const uint a_scale_input_size = params.a_scale_input.n * params.a_scale_input.c * params.a_scale_input.d * params.a_scale_input.w * params.a_scale_input.h;
	const uint a_zero_point_input_size = params.a_zero_point_input.n * params.a_zero_point_input.c * params.a_zero_point_input.d * params.a_zero_point_input.w * params.a_zero_point_input.h;
	const uint b_input_size = params.b_input.n * params.b_input.c * params.b_input.d * params.b_input.w * params.b_input.h;
	const uint b_scale_input_size = params.b_scale_input.n * params.b_scale_input.c * params.b_scale_input.d * params.b_scale_input.w * params.b_scale_input.h;
	const uint b_zero_point_input_size = params.b_zero_point_input.n * params.b_zero_point_input.c * params.b_zero_point_input.d * params.b_zero_point_input.w * params.b_zero_point_input.h;
	const uint y_scale_input_size = params.y_scale_input.n * params.y_scale_input.c * params.y_scale_input.d * params.y_scale_input.w * params.y_scale_input.h;
	const uint y_zero_point_input_size = params.y_zero_point_input.n * params.y_zero_point_input.c * params.y_zero_point_input.d * params.y_zero_point_input.w * params.y_zero_point_input.h;
    
    const uint y_output_size = params.y_output.n * params.y_output.c * params.y_output.d * params.y_output.w * params.y_output.h;
    

    if(size <= idx) {
        return;
    }
   
}
