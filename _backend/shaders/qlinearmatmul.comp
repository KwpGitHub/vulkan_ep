
#version 450
struct Shape_t { uint n; uint c; uint d; uint h; uint w; };

layout(local_size_x_id = 0) in;
layout(local_size_y_id = 1) in;
layout(local_size_z_id = 2) in;

layout(push_constant) uniform Parameters {      
    uint size;
    float a;
/*//input
    Shape_t a_i; Shape_t a_scale_i; Shape_t a_zero_point_i; Shape_t b_i; Shape_t b_scale_i; Shape_t b_zero_point_i; Shape_t y_scale_i; Shape_t y_zero_point_i;
    
 //output
    Shape_t y_o;
    */


} params;

layout(std430, binding = 0) buffer lay0 { Shape_t shape[]; };
layout(std430, binding = 1) buffer lay1 { float a_i[]; };
layout(std430, binding = 2) buffer lay2 { float a_scale_i[]; };
layout(std430, binding = 3) buffer lay3 { float a_zero_point_i[]; };
layout(std430, binding = 4) buffer lay4 { float b_i[]; };
layout(std430, binding = 5) buffer lay5 { float b_scale_i[]; };
layout(std430, binding = 6) buffer lay6 { float b_zero_point_i[]; };
layout(std430, binding = 7) buffer lay7 { float y_scale_i[]; };
layout(std430, binding = 8) buffer lay8 { float y_zero_point_i[]; };
layout(std430, binding = 9) buffer lay9 { float y_o[]; };

void main(){
    const uint idx = gl_GlobalInvocationID.x;
    const uint idy = gl_GlobalInvocationID.y;
    const uint idz = gl_GlobalInvocationID.z;
    ////const uint a_i_size = params.a_i.n * params.a_i.c * params.a_i.d * params.a_i.w * params.a_i.h;
	//const uint a_scale_i_size = params.a_scale_i.n * params.a_scale_i.c * params.a_scale_i.d * params.a_scale_i.w * params.a_scale_i.h;
	//const uint a_zero_point_i_size = params.a_zero_point_i.n * params.a_zero_point_i.c * params.a_zero_point_i.d * params.a_zero_point_i.w * params.a_zero_point_i.h;
	//const uint b_i_size = params.b_i.n * params.b_i.c * params.b_i.d * params.b_i.w * params.b_i.h;
	//const uint b_scale_i_size = params.b_scale_i.n * params.b_scale_i.c * params.b_scale_i.d * params.b_scale_i.w * params.b_scale_i.h;
	//const uint b_zero_point_i_size = params.b_zero_point_i.n * params.b_zero_point_i.c * params.b_zero_point_i.d * params.b_zero_point_i.w * params.b_zero_point_i.h;
	//const uint y_scale_i_size = params.y_scale_i.n * params.y_scale_i.c * params.y_scale_i.d * params.y_scale_i.w * params.y_scale_i.h;
	//const uint y_zero_point_i_size = params.y_zero_point_i.n * params.y_zero_point_i.c * params.y_zero_point_i.d * params.y_zero_point_i.w * params.y_zero_point_i.h;
    //
    ////const uint y_o_size = params.y_o.n * params.y_o.c * params.y_o.d * params.y_o.w * params.y_o.h;
    //

    //if(5 <= idx) {
    //    return;
    //}
    return;
}
