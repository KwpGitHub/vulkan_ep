
#version 450
struct Shape_t { uint n; uint c; uint d; uint h; uint w; };

layout(local_size_x_id = 0) in;
layout(local_size_y_id = 1) in;
layout(local_size_z_id = 2) in;

layout(push_constant) uniform Parameters {      
  
//input
    Shape_t X_i; Shape_t W_i; Shape_t R_i;
    Shape_t B_i; Shape_t sequence_lens_i; Shape_t initial_h_i;
//output
    
    Shape_t Y_o; Shape_t Y_h_o;
} params;

layout(std430, binding = 0) buffer lay0 { float X_i[]; };
layout(std430, binding = 1) buffer lay1 { float W_i[]; };
layout(std430, binding = 2) buffer lay2 { float R_i[]; };
layout(std430, binding = 3) buffer lay3 { float B_i[]; };
layout(std430, binding = 4) buffer lay4 { float sequence_lens_i[]; };
layout(std430, binding = 5) buffer lay5 { float initial_h_i[]; };
layout(std430, binding = 6) buffer lay6 { float Y_o[]; };
layout(std430, binding = 7) buffer lay7 { float Y_h_o[]; };

void main(){
    const uint idx = gl_GlobalInvocationID.x;
    const uint idy = gl_GlobalInvocationID.y;
    const uint idz = gl_GlobalInvocationID.z;
    ////const uint X_i_size = params.X_i.n * params.X_i.c * params.X_i.d * params.X_i.w * params.X_i.h;
	//const uint W_i_size = params.W_i.n * params.W_i.c * params.W_i.d * params.W_i.w * params.W_i.h;
	//const uint R_i_size = params.R_i.n * params.R_i.c * params.R_i.d * params.R_i.w * params.R_i.h;
    ////const uint B_i_size = params.B_i.n * params.B_i.c * params.B_i.d * params.B_i.w * params.B_i.h;
	//const uint sequence_lens_i_size = params.sequence_lens_i.n * params.sequence_lens_i.c * params.sequence_lens_i.d * params.sequence_lens_i.w * params.sequence_lens_i.h;
	//const uint initial_h_i_size = params.initial_h_i.n * params.initial_h_i.c * params.initial_h_i.d * params.initial_h_i.w * params.initial_h_i.h;
    //
    ////const uint Y_o_size = params.Y_o.n * params.Y_o.c * params.Y_o.d * params.Y_o.w * params.Y_o.h;
	//const uint Y_h_o_size = params.Y_h_o.n * params.Y_h_o.c * params.Y_h_o.d * params.Y_h_o.w * params.Y_h_o.h;

    //if(5 <= idx) {
    //    return;
    //}
    return;
}
